import pandas as pd
import numpy as np
import datetime as det
import matplotlib.pyplot as plt
#数据粗分析和初步调查
d=pd.read_csv(r'D:\办公工具\大创\项目\(sample)sam_tianchi_mum_baby_trade_history.csv')
m=d['buy_mount']
print(m.describe())
#数据清洗
buy=pd.read_csv(r'D:\办公工具\大创\项目\(sample)sam_tianchi_mum_baby_trade_history.csv')
buy.drop(labels='property',axis=1,inplace=True)
time=buy['day']
buy['day']=pd.to_datetime(buy['day'],format='%Y%m%d')
buy['day'].min(),buy['day'].max()
(buy['buy_mount']<=0).sum()      #查看超常数据
(buy['buy_mount']>=160).sum()
number=buy.groupby('user_id')    #查看用户数量便于后期分析
numbers=number.size()
buy['user_id'].nunique()
#每天卖出每种商品数据
protime_1=buy[(buy['cat1']==28)]
protime_2=buy[(buy['cat1']==38)]
protime_3=buy[(buy['cat1']==50008168)]
protime_4=buy[(buy['cat1']==50014815)]
protime_5=buy[(buy['cat1']==50022520)]
protime_6=buy[(buy['cat1']==122650008)]
daynumber_6=protime_6.groupby('day')
daynumbers_6=daynumber_6.size()
#查看商品出售的最大日期
#protime_1['day'].max()
#protime_2['day'].max()
#protime_3['day'].max()
#protime_4['day'].max()
#protime_5['day'].max()
#protime_6['day'].max()
#分析用户性别比例（将性别为2的数据按照客户需求改为1，或者去除，此处选择前者）
baby=pd.read_csv(r'D:\办公工具\大创\项目\(sample)sam_tianchi_mum_baby.csv')
baby['ba\irthday']=pd.to_datetime(baby['birthday'],format='%Y%m%d')
baby['gender'].value_counts()
baby.loc[baby['gender']==2,'gender']=1
baby['gender'].value_counts()
#分析客户是否为“回头客”
df=pd.merge(buy,baby,left_on='user_id',right_on='user_id',how='left')
df_1=df.groupby(by='user_id')['day'].agg(['first','last'])
(df_1['first']==df_1['last']).value_counts()
#将时间数据统一便于可视化
df['month']=df['day'].astype('datetime64[M]')
month_sum=df.groupby(by='month')
month_excel=month_sum['buy_mount'].sum()
month_excel.to_excel(r'D:\办公工具\大创\项目\c1.xlsx')
#用户月度购买数据图
plt.plot(month_excel.index,month_excel.values)
plt.xticks(rotation=45)
plt.show()
#将每天的售卖数据按照数组存储
df['month_buy']=df['day'].dt.month
df['month_year']=df['day'].astype('datetime64[Y]')
year_month_sales=df.groupby(by=['month_year','month_buy'])['buy_mount'].sum()
#将每类商品按编号分析其月份售卖数据
pro2012_1=df[df['cat1']==28]
pro2012_1['month_year']=pro2012_1['day'].astype('datetime64[Y]')
pro2012_1_sales=pro2012_1.groupby(by=['month_year','month_buy'])['buy_mount'].sum()
pro2012_2=df[df['cat1']==122650008]
pro2012_2['month_year']=pro2012_2['day'].astype('datetime64[Y]')
pro2012_2_sales=pro2012_2.groupby(by=['month_year','month_buy'])['buy_mount'].sum()
#绘制年度数据售卖折线图
sales_2012=year_month_sales['2012-01-01']
sales_2013=year_month_sales['2013-01-01']
sales_2014=year_month_sales['2014-01-01']
sales_2015=year_month_sales['2015-01-01']
plt.plot(sales_2012.index,sales_2012.values,label='2012')
plt.plot(sales_2013.index,sales_2013.values,label='2013')
plt.plot(sales_2014.index,sales_2014.values,label='2014')
plt.plot(sales_2015.index,sales_2015.values,label='2015')
plt.legend()
#分析2012年和2013年11月份异常数据折线图
sales_2012=year_month_sales['2012-01-01']
sales_2013=year_month_sales['2013-01-01']
sales_2014=year_month_sales['2014-01-01']
sales_2015=year_month_sales['2015-01-01']
plt.plot(sales_2012.index,sales_2012.values,label='2012')
plt.plot(sales_2013.index,sales_2013.values,label='2013')
plt.plot(sales_2014.index,sales_2014.values,label='2014')
plt.plot(sales_2015.index,sales_2015.values,label='2015')
plt.legend()
#分析2013年和2014年5月异常数据折线图
df_12_m5=df.query('month_year=="2012-01-01"&month_buy==5')
df_13_m5=df.query('month_year=="2013-01-01"&month_buy==5')
df_14_m5=df.query('month_year=="2014-01-01"&month_buy==5')
df_12_m5_sale=df_12_m5.groupby('day_num')['buy_mount'].sum()
df_13_m5_sale=df_13_m5.groupby('day_num')['buy_mount'].sum()
df_14_m5_sale=df_14_m5.groupby('day_num')['buy_mount'].sum()
plt.plot(df_13_m5_sale.index,df_13_m5_sale.values,label='2013-5')
plt.plot(df_14_m5_sale.index,df_14_m5_sale.values,label='2014-5')
plt.legend()
#分析2012-2014年9月异常数据折线图
df_12_m9=df.query('month_year=="2012-01-01"&month_buy==9')
df_13_m9=df.query('month_year=="2013-01-01"&month_buy==9')
df_14_m9=df.query('month_year=="2014-01-01"&month_buy==9')
df_12_m9_sale=df_12_m9.groupby('day_num')['buy_mount'].sum()
df_13_m9_sale=df_13_m9.groupby('day_num')['buy_mount'].sum()
df_14_m9_sale=df_14_m9.groupby('day_num')['buy_mount'].sum()
plt.plot(df_12_m9_sale.index,df_12_m9_sale.values,label='2012-9')
plt.plot(df_13_m9_sale.index,df_13_m9_sale.values,label='2013-9')
plt.plot(df_14_m9_sale.index,df_14_m9_sale.values,label='2014-9')
plt.legend()
#单独分析2012年和2013年9月异常数据折线图
df_12_m9=df.query('month_year=="2012-01-01"&month_buy==9')
df_13_m9=df.query('month_year=="2013-01-01"&month_buy==9')
df_14_m9=df.query('month_year=="2014-01-01"&month_buy==9')
df_12_m9_sale=df_12_m9.groupby('day_num')['buy_mount'].sum()
df_13_m9_sale=df_13_m9.groupby('day_num')['buy_mount'].sum()
df_14_m9_sale=df_14_m9.groupby('day_num')['buy_mount'].sum()
plt.plot(df_12_m9_sale.index,df_12_m9_sale.values,label='2012-9')
plt.plot(df_13_m9_sale.index,df_13_m9_sale.values,label='2013-9')
plt.legend()
#每类商品的所有售卖数据柱状图
cat1_sales=df.groupby('cat1')['buy_mount'].sum()
plt.bar(cat1_sales.index.astype('str'),cat1_sales.values)
plt.xticks(rotation=45)
#每类商品“回头客”数量柱状图
cat1_user_count=df.groupby('cat1')['user_id'].nunique()
plt.bar(cat1_user_count.index.astype('str'),cat1_user_count.values)
plt.xticks(rotation=45)
#每类商品性别比例售卖图
gender_mount=df.groupby(by=['gender','cat1'])['buy_mount'].sum()
gender_mount_female=gender_mount[0.0]
gender_mount_male=gender_mount[1.0]
plt.bar(gender_mount_female.index.astype('str'),gender_mount_female.values)
plt.xticks(rotation=45)
plt.bar(gender_mount_female.index.astype('str'),gender_mount_female.values)
plt.xticks(rotation=45)